// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Shoe {
  id        Int      @id @default(autoincrement())
  model     String
  brand     String
  createdAt DateTime @default(now())

  specs    ShoeSpec?
  versions ShoeVersion[]

  @@unique([model, brand], name: "model_brand")
}

model ShoeSpec {
  id              Int     @id @default(autoincrement())
  shoeId          Int     @unique
  stackHeightMm   Int?
  heelToToeDropMm Int?
  width           String? // e.g., "narrow", "standard", "wide"
  depth           String? // e.g., "low", "medium", "high"

  shoe Shoe @relation(fields: [shoeId], references: [id], onDelete: Cascade)
}

model ShoeReview {
  id         Int     @id @default(autoincrement())
  vesrionId  Int
  fit        String?
  feel       String?
  durability String?

  shoeVersion ShoeVersion @relation(fields: [vesrionId], references: [id], onDelete: Cascade)
}

model ShoeVersion {
  id            Int       @id @default(autoincrement())
  shoeId        Int
  name          String
  intendedUse   String? // e.g., "road", "trail", "race"
  trueToSize    String? // e.g. "true", "small", "large"
  previousModel String?
  nextModel     String?
  changes       String?
  releaseDate   DateTime?

  shoe       Shoe         @relation(fields: [shoeId], references: [id], onDelete: Cascade)
  ShoeGender ShoeGender[]
  reviews    ShoeReview[]

  @@unique([shoeId, name], name: "id_name")
}

model ShoeGender {
  id          Int      @id @default(autoincrement())
  versionId   Int
  gender      String
  weightGrams Int?
  price       Decimal?
  imageIds    Int[]

  version ShoeVersion @relation(fields: [versionId], references: [id], onDelete: Cascade)

  @@unique([versionId, gender], name: "id_gender")
}

model Image {
  id   Int    @id @default(autoincrement())
  name String
  data Bytes
}
